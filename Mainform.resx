<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SDgxqEVtv5JTsjOxCxKfWnAZ0TBP/9k=
</value>
  </data>
</root>